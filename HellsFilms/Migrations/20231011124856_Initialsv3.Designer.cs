// <auto-generated />
using System;
using HellsFilms.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HellsFilms.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231011124856_Initialsv3")]
    partial class Initialsv3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HellsFilms.Models.HellsFilmsBlog", b =>
                {
                    b.Property<long>("HellsFilmsBlogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HellsFilmsBlogID"), 1L, 1);

                    b.Property<string>("HellsFilmsBlogDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HellsFilmsBlogDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HellsFilmsBlogName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("HellsFilmsBlogPhoto")
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("HellsFilmsTagID")
                        .HasColumnType("bigint");

                    b.HasKey("HellsFilmsBlogID");

                    b.HasIndex("HellsFilmsTagID");

                    b.ToTable("HellsFilmsBlogs");
                });

            modelBuilder.Entity("HellsFilms.Models.HellsFilmsMovie", b =>
                {
                    b.Property<long>("HellsFilmsMovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HellsFilmsMovieID"), 1L, 1);

                    b.Property<int>("HellsFilmsMovieDate")
                        .HasColumnType("int");

                    b.Property<string>("HellsFilmsMovieIDFilms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HellsFilmsMovieName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HellsFilmsMoviePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HellsFilmsMovieRating")
                        .HasColumnType("float");

                    b.HasKey("HellsFilmsMovieID");

                    b.ToTable("HellsFilmsMovies");
                });

            modelBuilder.Entity("HellsFilms.Models.HellsFilmsSerial", b =>
                {
                    b.Property<long>("HellsFilmsSerialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HellsFilmsSerialID"), 1L, 1);

                    b.Property<int>("HellsFilmsSerialDate")
                        .HasColumnType("int");

                    b.Property<string>("HellsFilmsSerialIDSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HellsFilmsSerialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HellsFilmsSerialPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HellsFilmsSerialRating")
                        .HasColumnType("float");

                    b.HasKey("HellsFilmsSerialID");

                    b.ToTable("HellsFilmsSerials");
                });

            modelBuilder.Entity("HellsFilms.Models.HellsFilmsTag", b =>
                {
                    b.Property<long>("HellsFilmsTagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HellsFilmsTagID"), 1L, 1);

                    b.Property<string>("HellsFilmsTagName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HellsFilmsTagSlug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HellsFilmsTagID");

                    b.ToTable("HellsFilmsTags");
                });

            modelBuilder.Entity("HellsFilms.Models.HellsFilmsBlog", b =>
                {
                    b.HasOne("HellsFilms.Models.HellsFilmsTag", "HellsFilmsBlogTag")
                        .WithMany()
                        .HasForeignKey("HellsFilmsTagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HellsFilmsBlogTag");
                });
#pragma warning restore 612, 618
        }
    }
}
